#include <iostream>
#include<vector>
using namespace std;

void merge(vector<int>&arr,vector<int>&temp,int start,int end){
    int i=start,j=mid+1,k=s;

    //merging main
    while(i<=mid&&j<=end){
        if(arr[i]>arr[j]){
            temp[k++]=arr[i++];
        }
        else{
            temp[k++]=arr[j++];
        }
    }

    //copying the remainig element;
    while(i<=mid){
        temp[k++]=arr[i++];
    }

    while(j<=end){
        temp[k++]=arr[j++];
    }

   while (s<=end)
   {
    arr[s]=temp[s];
    ++s;
   }
   
}


void MergeSort(vector<int>&arr,vector<int>&temp,int start,int end){
//base case
if(start>=end){
    return;
}

int mid=s+(e-s)/2;

// sorting the left section of the array
 MergeSort(arr,temp,start,mid);


// sorting the right section of the array
MergeSort(arr,temp,mid+1,end);

//merging two sorted Array

merge(arr,temp,start,mid,end);

}


int main(){

vector<int>arr{8,4,2,1};


vector<int>temp(arr.size(),0);

MergeSort(arr,temp,0,arr.size()-1);

for(int i=0;i<arr.size();i++){

    cout<<arr[i]<<" ";
}

    return 0;
}